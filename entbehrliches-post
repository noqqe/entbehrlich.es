#!/usr/bin/env python
# -*- coding: utf-8 -*-

import re
import os
import click
import nltk
import urlparse
import fileinput
import wikipedia
from dateutil.parser import parse
import datetime

posts_home = os.path.expanduser("~/Code/entbehrlich.es/content/post/")
head = "---\n"
n = "\n"

@click.group()
def cli():
    pass

@cli.command()
@click.argument('url')
@click.option('publish', '-d', '--date', default=str(datetime.datetime.now()))
def new(url, publish):

    origurl = url

    # find wikipedia link
    url = urlparse.urlparse(url)
    lang = url.netloc.split('.')[0]
    title = url.path.split('/')[2].replace('-',' ').replace('_',' ')
    filename = title.replace(' ','-').replace('---','-') + '.md'

    # set lang and title, fetch wikipedia article
    wikipedia.set_lang(lang)
    wiki = wikipedia.summary(title)

    t = parse(publish)
    t = t.replace(hour=14, minute=0, microsecond=0)
    t = t.isoformat()

    # first sentence of the article and quote it for markdown
    if len(wiki) >= 350:
        wiki = nltk.tokenize.sent_tokenize(wiki)[0]
    wiki = "> " + wiki

    # generate markdown document
    header = head + "title: " + title + n + "date: " + t + n + "draft: true" + n + head + n
    text = header + n + origurl + n + n + wiki

    # write markdown to the document
    with open(posts_home + filename, "w") as f:
        f.write(text.encode("utf-8"))
        f.close()

    print("Created Post: " + posts_home + filename)


@cli.command()
@click.option('all', '--all', '-a',  is_flag=True)
def queue(all):

    posts = os.listdir(posts_home)
    for post in posts:
        if not all:
            if 'draft: true' in open(posts_home + post).read():
                print post
        else:
            print post


@cli.command()
@click.argument('post')
def release(post):

    t = datetime.datetime.now()
    t = t.isoformat()
    path = posts_home + post

    try:
        open(path)
    except IOError:
        print("No such file")
        return False

    if 'draft: true' in open(path).read():
        for line in fileinput.input(path, inplace=True):
            print line.replace('date:.*', 'date: %s' % t)


if __name__ == '__main__':
    cli()
